export const en = {
  calendarChart: {
    calendarType: 'Calendar Chart Type',
    title: 'Title',
    defaultTitle: 'Calendar Chart',
    tooltip: 'Tooltip',
  },
  themeriverChart: {
    themeriverType: 'Themeriver Chart Type',
    title: 'Title',
    defaultTitle: 'Themeriver Chart',
    tooltip: 'Tooltip',
  },
  sunburstChart: {
    sunburstType: 'Sunburst Chart Type',
    title: 'Title',
    defaultTitle: 'Sunburst Chart',
    tooltip: 'Tooltip',
  },
  treemapChart: {
    treemapType: 'Treemap Chart Type',
    title: 'Title',
    defaultTitle: 'Treemap Chart',
    tooltip: 'Tooltip',
  },
  treeChart: {
    treeType: 'Tree Chart Type',
    title: 'Title',
    defaultTitle: 'Tree Chart',
    tooltip: 'Tooltip',
  },
  graphChart: {
    graphType: 'Graph Chart Type',
    title: 'Title',
    defaultTitle: 'Graph Chart',
    tooltip: 'Tooltip',
  },
  heatmapChart: {
    heatmapType: 'Heatmap Chart Type',
    title: 'Title',
    defaultTitle: 'Heatmap Chart',
    tooltip: 'Tooltip',
  },
  radarChart: {
    radarType: 'Radar Chart Type',
    title: 'Title',
    defaultTitle: 'Radar Chart',
    tooltip: 'Tooltip',
  },
  candleStickChart: {
    candleStickType: 'CandleStick Chart Type',
    title: 'Title',
    defaultTitle: 'CandleStick Chart',
    tooltip: 'Tooltip',
  },
  sankeyChart: {
    sankeyType: 'Sankey Chart Type',
    title: 'Title',
    defaultTitle: 'Sankey Chart',
    tooltip: 'Tooltip',
  },
  funnelChart: {
    title: 'Title',
    defaultTitle: 'Funnel Chart',
    funnelType:'Funnel Chart Type',
    tooltip: 'Tooltip',
    legendVisibility: 'Legend Visibility',
    left: 'Left',
    defaultLeft:'35',
    top: 'Top',
    defaultTop:'60',
    bottom: 'Bottom',
    defaultBottom:'60',
    width: 'Width',
    defaultWidth:'80',
    min: 'Min',
    defaultMin:'0',
    max: 'Max',
    defaultMax:'100',
    gap: 'Gap',
    defaultGap: '2',
    label:'Label',
  },
  gaugeChart: {
    title: 'Title',
    defaultTitle: 'Gauge Chart',
    gaugeType: 'Gauge Chart Type',
    tooltip: 'Tooltip',
    left: 'Left',
    defaultLeft:'35',
    top: 'Top',
    defaultTop:'60',
    bottom: 'Bottom',
    defaultBottom:'60',
    width: 'Width',
    defaultWidth:'80',
    min: 'Min',
    defaultMin:'0',
    max: 'Max',
    defaultMax:'100',
    gap: 'Gap',
    defaultGap: '2',
    label:'Label',
  },
  echarts: {
    defaultTitle: "Data Display",
    legendPosition: "Legend Position",
    labelPosition: "Label Position",
    titlePosition: "Title Position",
  },
  chart: {
    delete: "Delete",
    data: "Data",
    mode: "Mode",
    config: "Configuration",
    UIMode: "UI Mode",
    chartType: "Chart Type",
    xAxis: "X-axis",
    chartSeries: "Chart Series",
    customSeries: "Custom Series",
    add: "Add",
    confirmDelete: "Confirm Delete: ",
    seriesName: "Series Name",
    dataColumns: "Data Columns",
    title: "Title",
    tooltip:'Tooltip',
    xAxisDirection: "X-axis Direction",
    xAxisName: "X-axis Name",
    xAxisType: "X-axis Type",
    xAxisTypeTooltip:
      "Automatically detected based on X-axis data. For type detail, refer to: ",
    logBase: "Log Base",
    yAxisName: "Y-axis Name",
    yAxisType: "Y-axis Type",
    yAxisDataFormat: "Y-axis Data Type",
    yAxisDataFormatTooltip:
      "Indicates the value of each coordinate. Example: '{{value * 100 + \"%\"}}'",
    basicBar: "Basic Bar",
    stackedBar: "Stacked Bar",
    barType: "Bar Chart Type",
    categoryAxis: "Category Axis",
    valueAxis: "Value Axis",
    timeAxis: "Time Axis",
    logAxis: "Log Axis",
    auto: "Default",
    legendPosition: "Legend Position",
    basicLine: "Basic Line",
    stackedLine: "Stacked Line",
    areaLine: "Area Line",
    smooth: "Smooth Curve",
    lineType: "Line Chart Type",
    basicPie: "Basic Pie",
    doughnutPie: "Doughnut Pie",
    rosePie: "Rose Pie",
    pieType: "Pie Chart Type",
    spending: "Spending",
    budget: "Budget",
    bar: "Bar Chart",
    line: "Line Chart",
    scatter: "Scatter Chart",
    pie: "Pie Chart",
    horizontal: "Horizontal",
    vertical: "Vertical",
    noData: "No Data",
    unknown: "Unknown",
    select: "Select",
    unSelect: "Unselect",
    echartsOptionLabel: "Option",
    echartsOptionTooltip: "ECharts Option",
    echartsOptionExamples: "ECharts Examples",
    echartsMapOptionTooltip: "ECharts Map Option",
    echartsMapOptionExamples: "ECharts Map Examples",
    selectDesc: "Triggered when a user selects part of the data in the chart",
    unselectDesc:
      "Triggered when a user unselects part of the data in the chart",
    selectedPointsDesc: "Selected Points",
    lastInteractionDataDesc: "Last Interaction Data",
    dataDesc: "JSON Data for the Chart",
    titleDesc: "Current Chart Title",
    scatterShape: "Scatter Shape",
    circle: "Circle",
    rect: "Rectangle",
    triangle: "Triangle",
    diamond: "Diamond",
    pin: "Pin",
    arrow: "Arrow",
    pointColorLabel: "Point Color",
    pointColorTooltip:
      'Set point color based on series name and value. Variables: seriesName, value. Example: \'{{value < 25000 ? "red" : "green"}}\'',
    mapReady: "Map Ready",
    mapReadyDesc: "Triggers when the map is ready",
    zoomLevelChange: "Zoom Level Change",
    zoomLevelChangeDesc: "Triggers when the map zoom level changes",
    centerPositionChange: "Center Position Change",
    centerPositionChangeDesc: "Triggers when the map center position changes",
    chartEventHandlers: "Chart Event Handlers",
  },
  imageEditor: {
    defaultSrc: "",
    save: "Save",
    saveDesc: "Save Image",
    src: "Image Source",
    name: "Image Name",
    buttonText: "Button Text",
    srcDesc: "Image Source",
    nameDesc: "Image Name",
    dataURIDesc: "Image Data URI",
    dataDesc: "Image Data",
    buttonTextDesc: "Button Text",
  },
  meeting: {
    logLevel: "Agora SDK Log Level",
    placement: "Meeting Drawer Placement",
    meeting: "Meeting Settings",
    loadingDesc: "loadingDesc",
    cameraView: "Camera View",
    cameraViewDesc: "Camera View of the Local User (Host)",
    screenShared: "Screen Shared",
    heightTooltip: "Pixel, e.g. 378",
    height: "Drawer Height",
    widthTooltip: "Pixel or Percentage, e.g. 520, 60%",
    width: "Drawer Width",
    screenSharedDesc: "Screen Shared by the Local User (Host)",
    audioUnmuted: "Audio Unmuted",
    audioMuted: "Audio Muted",
    videoClicked: "Video Clicked",
    showMask: "Show Mask",
    maskClosable: "Click Outside to Close",
    videoOff: "Video Off",
    videoOn: "Video On",
    size: "Size",
    top: "Top",
    host: "Host of the Meeting Room. You would need to manage the host as own Application Logic",
    participants: "Participants of the Meeting Room",
    shareScreen: "Display Screen Shared by the Local User",
    appid: "Agora Application ID",
    meetingName: "Meeting Name",
    localUserID: "Host User ID",
    userName: "Host User Name",
    rtmToken: "Agora RTM Token",
    rtcToken: "Agora RTC Token",
    noVideo: "No Video",
    profileImageUrl: "Profile Image URL",
    right: "Right",
    bottom: "Bottom",
    videoId: "Video Stream ID",
    audioStatus: "Audio Status",
    left: "Left",
    openDrawerDesc: "Open Drawer",
    closeDrawerDesc: "Close Drawer",
    actionBtnDesc: "Action Button",
    broadCast: "Broadcast Messages",
    title: "Meeting Title",
    meetingCompName: "Agora Meeting Controller",
    sharingCompName: "Screen Share Stream",
    videoCompName: "Camera Stream",
    videoSharingCompName: "Screen Share Stream",
    meetingControlCompName: "Control Button",
    meetingCompDesc: "Meeting Component",
    meetingCompControls: "Meeting Control",
    meetingCompKeywords: "Agora Meeting, Web Meeting, Collaboration",
    iconSize: "Icon Size",
    userId: "Host User ID",
    roomId: "Room ID",
    meetingActive: "Ongoing Meeting",
    messages: "Broadcasted Messages",
  },
  calendar: {
    events: "Events Data",
    resources: "Resources",
    resourcesDefault: "Rooms",
    resourcesName: "Resource Name",
    resourcesEvents : "Resources Events Data",
    editable: "Editable",
    license: "Licence Key",
    licenseTooltip: "Get your licence key from https://fullcalendar.io/purchase to enable premium views like Resource Timeline and Resource Grid.",
    defaultDate: "Default Date",
    defaultDateTooltip: "Initial display date of the calendar",
    defaultView: "Default View",
    defaultViewTooltip: "Initial view of the calendar",
    showEventTime: "Show Event Times",
    showEventTimeTooltip: "Display event time text",
    showWeekends: "Show Weekends",
    showAllDay: "Show All-Day",
    showAllDayTooltip: "Display all-day slot in week and day views",
    dayMaxEvents: "Day Max Events",
    dayMaxEventsTooltip: "Max events per day in month view, 0 for cell height limit",
    eventMaxStack: "Event Max Stack",
    eventMaxStackTooltip: "Max events to stack horizontally in week and day views, 0 for no limit",
    selectInterval: "Selected Interval",
    selectEvent: "Selected Event",
    changeSet: "Changed Event Object",
    headerBtnBackground: "Button Background",
    btnText: "Button Text",
    title: "Title",
    selectBackground: "Selected Background",
    today: "Today",
    month: "Month",
    week: "Week",
    weekdaygrid : "Days of Week",
    daygrid : "Day Events List",
    year: "Year",
    day: "Day",
    list: "Events List",
    timeline: "Resource Timeline", //added by fred
    resourceTimeGridDay: "Resource Grid", //added by fred
    monday: "Monday",
    tuesday: "Tuesday",
    wednesday: "Wednesday",
    thursday: "Thursday",
    friday: "Friday",
    saturday: "Saturday",
    sunday: "Sunday",
    startWeek: "Start From",
    creatEvent: "Create Event",
    editEvent: "Edit Event",
    eventName: "Event Name",
    eventColor: "Event Color",
    eventBackgroundColor:"Background",
    eventdetail:"Detail",
    eventTitleColor:"Title Color",
    eventdetailColor:"Detail Color",
    eventGroupId: "Group ID",
    groupIdTooltip: "Group ID groups events for drag and resize together.",
    more: "More",
    allDay: "All Day",
    eventNameRequire: "Enter Event Name",
    eventId: "Event ID",
    eventIdRequire: "Enter Event ID",
    eventIdTooltip: "Unique ID for each event",
    eventIdExist: "ID Exists",
    eventStartTime: "Start Time",
    eventEndTime: "End Time",
    eventAllDay: "All Day",
    eventResourceId: "Resource ID",
    dragDropEventHandlers: "Drag/Drop Event Handlers",
    general: "General",
    colorStyles:"Color Styles",
    fontStyles:"Font Styles",
    animations:"Animations",
    eventTitleFontWeight:"Title FontWeight",
    eventTitleFontStyle:"Title FontStyle",
    eventdetailFontWeight:"Detail FontWeight",
    eventdetailFontStyle:"Detail FontStyle",
    animationType:"Type",
    animationDelay:"Delay",
    animationDuration:"Duration",
    animationIterationCount:"IterationCount",
    showVerticalScrollbar:"Show Vertical ScrollBar"
  },
};

